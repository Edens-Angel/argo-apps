apiVersion: apps/v1
kind: Deployment
metadata:
  name: insta-uploader
  namespace: { { .Values.namespace } }
spec:
  replicas: { { .Values.insta-uploader.replicas } }
  selector:
    matchLabels:
      app: insta-uploader
  template:
    metadata:
      labels:
        app: insta-uploader
    spec:
      containers:
        - name: insta-uploader
          image: { { .Values.insta-uploader.image } }
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          envFrom:
            configMapRef:
              name: env-configmap
          env:
            - name: DROPBOX_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dropbox.secretName }}
                  key: {{ .Values.dropbox.accessTokenKey }}
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                 name: {{ .Values.instagram.secretName }}
                 key: {{ .Values.instagram.usernameKey }}
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.instagram.secretName }}
                  key: {{ .Values.instagram.passwordKey }}
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: insta-uploader
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: insta-uploader
  ports:
    - port: 8080
      targetPort: 8080
